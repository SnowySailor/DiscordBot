# Each reaction is stored as a `name: (regex, response, probability)`
# The probability (n) can be expressed as "if the regex matches, there is a 1/n
# chance that the response will actually send."
# If you always want to send a message, use either 0 or 1.

spicy: !!python/tuple [".*(spicy)", "http://i.imgur.com/l50LNcp.jpg", 4]
obama: !!python/tuple [".*(obama)", "http://imgur.com/WVwEZ1b.jpg", 4]
disappoint: !!python/tuple [".*(disappoint)", "http://imgur.com/TfT8wvi.gif", 5]
yourewrong: !!python/tuple [".*((you.? ?r?(ar)?e)|your) wrong", "http://imgur.com/VrM58GT.jpg", 2]
obligations: !!python/tuple [".*(obligations)", "http://i.imgur.com/rbJTvlf.jpg", 4]
hello: !!python/tuple ["^(hi|hello) (waifu|bot) ?(bot)?", "Hi {0.author.mention}", 0]
bestime: !!python/tuple [".*((im|i'm)|i am) (headed|going|off) ?(off)? ?(to)? (bed|sleep)", "Good night", 0]
grr: !!python/tuple ["^(grr)", "http://i.imgur.com/FH7f5Ta.gif", 4]
itshappening: !!python/tuple [".*(it.? ?i?s happening)", "http://i.imgur.com/YtKWRKk.gif", 0]
love: !!python/tuple [".*(love)\\s", "http://i.imgur.com/AqxwFcb.jpg", 10]
tomato: !!python/tuple [".*(tomato)", "http://i.imgur.com/RVgzWvi.jpg", 3]
chrome: !!python/tuple [".*(chrome)", "https://i.imgur.com/i9V4DKH.jpg", 5]
iphone: !!python/tuple [".*(iphone)", "https://i.imgur.com/rEs7rqr.jpg", 4]
expect: !!python/tuple [".*\\s(expect)\\s", "Nobody expects the Spanish Inquisition!", 50]
bestpony: !!python/tuple [".*(who is|who's) ?(the)? best (pony|waifu)\\??", "Isn't it obvious? I'm best pony.", 0]
whack: !!python/tuple [".*(whack)", "http://i.imgur.com/0bR8BIs.png", 2]
